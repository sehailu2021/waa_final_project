# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

version: '3.7'

# Define services
services:
  # App backend service
  app-server:
    # Configuration for building the docker image for the backend service
    build:
      context: WAA-Mini-Online-Market-Backend # Use an image built from the specified dockerfile in the `polling-app-server` directory.
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
    environment:
      DATABASE_HOST_URL: app-db
      DATABASE_PORT: 3306
      DATABASE_NAME: waafinalproject
      DB_USER: root
      DB_USER_PWD: testd
      PORT: 8080
      STATIC_FILE_SOURCE: /product_images
      CLIENT_URL: api-client:3000
    depends_on:
      - app-db # This service depends on mysql. Start that first.
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
      - frontend

  # Frontend Service
  app-client:
    build:
      context: WAA-Mini-Online-Market-FrontEnd # Use an image built from the specified dockerfile in the `polling-app-client` directory.
      dockerfile: Dockerfile
    ports:
      - 3000:3000 
    restart: always
    environment:
      API_URL: http://localhost:8080/api/v1
      PORT: 3000
    depends_on:
      - app-server
    networks:
      - frontend

  # Database Service (Mysql)
  app-db:
    image: mysql
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_DATABASE: waafinalproject
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: testd
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - backend

# Volumes
volumes:
  db-data:

# Networks to be created to facilitate communication between containers
networks:
  backend:
  frontend:

